<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.betta.note.mapper.NoteInfoMapper">
    
    <resultMap type="NoteInfo" id="NoteInfoResult">
        <result property="id"    column="id"    />
        <result property="contentId"    column="content_id"    />
        <result property="name"    column="name"    />
        <result property="parentId"    column="parent_id"    />
        <result property="tag"    column="tag"    />
        <result property="source"    column="source"    />
        <result property="isLeaf"    column="is_leaf"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="status"    column="status"    />
        <result property="parentIds"    column="parent_ids"    />
    </resultMap>

    <sql id="selectNoteInfoVo">
        select id, content_id, name, parent_id, tag, source, is_leaf, create_time, create_by, update_time, update_by, status, parent_ids from note_info
    </sql>

    <select id="selectNoteInfoList" parameterType="NoteInfo" resultMap="NoteInfoResult">
        <include refid="selectNoteInfoVo"/>
        <where>
            and parent_id is not null
            <if test="name != null  and name != ''">

            and (name like concat('%', #{name}, '%') or exists
            (select 1 from note_content where note_info.content_id = note_content.id
            and note_content.text like concat('%', #{name}, '%') ))

            </if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="tag != null  and tag != ''"> and tag = #{tag}</if>
            <if test="source != null  and source != ''"> and source = #{source}</if>
            <if test="isLeaf != null "> and is_leaf = #{isLeaf}</if>
            <if test="parentIds != null  and parentIds != ''"> and parent_ids = #{parentIds}</if>
            ${params.createByScope}
        </where>
        order by `name`,is_leaf
    </select>


    <select id="selectNoteDetailList" parameterType="NoteInfo">
        select a.id,a.name,a.create_by as createBy,b.text from note_info a left join note_content b on a.content_id=b.id
        <where>
            <if test="id != null ">and a.id = #{id}</if>
            <if test="createTime != null "> and (a.create_time > #{createTime} or a.update_time > #{createTime} or
                b.create_time > #{createTime} or b.update_time > #{createTime})</if>
            and a.create_by = #{createBy}
        </where>
            limit #{params.start},#{params.offset}
    </select>

    <select id="selectNoteCount" parameterType="NoteInfo">
        select count(1) from note_info a left join note_content b on a.content_id=b.id
        <where>
            <if test="createTime != null "> and (a.create_time > #{createTime} or a.update_time > #{createTime} or
                b.create_time > #{createTime} or b.update_time > #{createTime})</if>
            and a.create_by = #{createBy}
        </where>
    </select>

    <select id="selectTreeSelect" parameterType="NoteInfo">
        select id, name as label ,parent_id as parentId from note_info
        <where>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
<!--            <if test="parentId != null "> and parent_id = #{parentId}</if>-->
            <if test="tag != null  and tag != ''"> and tag = #{tag}</if>
            <if test="source != null  and source != ''"> and source = #{source}</if>
            <if test="isLeaf != null "> and is_leaf = #{isLeaf}</if>
            <if test="parentIds != null  and parentIds != ''"> and parent_ids = #{parentIds}</if>
            and create_by=#{createBy}
        </where>
        order by name
    </select>
    
    <select id="selectNoteInfoById" parameterType="Long" resultMap="NoteInfoResult">
        <include refid="selectNoteInfoVo"/>
        where id = #{id}
    </select>


    <select id="selectNoteInfoByIds" resultMap="NoteInfoResult">
        <include refid="selectNoteInfoVo"/>
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectLast" resultMap="NoteInfoResult">
        <include refid="selectNoteInfoVo"/>
        <where>${params.createByScope}</where>
        order by update_time desc
        limit #{limit}
    </select>

    <insert id="insertNoteInfo" parameterType="NoteInfo" useGeneratedKeys="true" keyProperty="id">
        insert into note_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contentId != null">content_id,</if>
            <if test="name != null">name,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="tag != null">tag,</if>
            <if test="source != null">source,</if>
            <if test="isLeaf != null">is_leaf,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="status != null">status,</if>
            <if test="parentIds != null">parent_ids,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="contentId != null">#{contentId},</if>
            <if test="name != null">#{name},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="tag != null">#{tag},</if>
            <if test="source != null">#{source},</if>
            <if test="isLeaf != null">#{isLeaf},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="status != null">#{status},</if>
            <if test="parentIds != null">#{parentIds},</if>
         </trim>
    </insert>

    <update id="updateNoteInfo" parameterType="NoteInfo">
        update note_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="contentId != null">content_id = #{contentId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="tag != null">tag = #{tag},</if>
            <if test="source != null">source = #{source},</if>
            <if test="isLeaf != null">is_leaf = #{isLeaf},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="status != null">status = #{status},</if>
            <if test="parentIds != null">parent_ids = #{parentIds},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateParent">
        update note_info set parent_id = #{parentId}
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <delete id="deleteNoteInfoById" parameterType="Long">
        delete from note_info where id = #{id}
    </delete>

    <delete id="deleteNoteInfoByIds" parameterType="String">
        delete from note_info where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>